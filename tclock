#!/bin/bash
#
# Script to facilitate tracking time in basic timeclock format
#
# Copyright (C) 2020 Robert Bollons - All Rights Reserved
# Permission to copy and modify is granted under the MIT license
# Version 1.0.0
# Licence: MIT

set -o errtrace
set -o nounset
set -o pipefail

TCLOCK_FILE=${TCLOCK_FILE:=~/log.timeclock}

fail () {
    local message="${1}"

    echo "Error: ${message}";
    exit 1
}

_parse_friendly_date () {
    echo $(date --date="$1" +%F)
}

# TODO: Log a space after the category to be compatible with hledger
_log_time_in () {
    echo i $(date "+%Y-%m-%d %H:%M:%S") $* >>"$TCLOCK_FILE"
}

_log_time_out () {
    echo o $(date "+%Y-%m-%d %H:%M:%S") >>"$TCLOCK_FILE"
}

_print_entries () {
    cat "$TCLOCK_FILE" | awk -i tclock.awk "/^[io]/{printEntries(\"$1\", \"$2\")}"
}

_print_summary () {
    cat "$TCLOCK_FILE" | awk -i tclock.awk "/^[io]/{collectSummary(\"$1\", \"$2\")} END {printSummary()}"
}

_print_active () {
    cat "$TCLOCK_FILE" | awk -i tclock.awk "/^[io]/{collectActive()} END {printActive()}"
}

_edit () {
    $EDITOR "$TCLOCK_FILE"
}

_usage () {
cat << EOF
usage: $(basename "$0") [action]
tclock - command line time tracker
ACTIONS
    i|in|start  <category> <description>  Begin tracking / Log time in entry
    o|out|stop                            Stop tracking / Log time out
    edit                                  Launch default editor with the timeclock file
    print       <date> <category filter>  Prints all entries for a given date
    summary     <date> <category filter>  Prints a grouped summary of all entries for a given date
    active                                Prints a list of open time entries
EOF
}

if [[ $# == 0 ]] ; then
    _usage
else
    case $1 in
        i|in|start)
            shift
            _log_time_in "$@"
            ;;
        o|out|stop)
            _log_time_out
            ;;
        print)
            _print_entries $(_parse_date ${2:-"today"}) "${3-}"
            ;;
        summary)
            _print_summary $(_parse_date ${2:-"today"}) "${3-}"
            ;;
        active)
            _print_active
            ;;
        edit)
            _edit
            ;;
        --help|help)
            _usage
            ;;
        *)
            _usage
            ;;
    esac
fi
